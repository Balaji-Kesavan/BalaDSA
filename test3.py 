"""
Two Sum (HashMap approach)
What it is:
Given an array and a target sum, find two numbers that add up to the target.
Brute force: O(n²) by checking all pairs.
HashMap approach: Store seen numbers in a dictionary → O(n).
Interview Tips:
Always clarify if only one pair exists or multiple.
Ask if array is sorted (binary search + two pointers works).
Be ready to extend to 3Sum / 4Sum variants.
"""

from typing import List


class Solution:
    def twoSum(self, nums: List[int], target: int) -> List[int]:
        nums_map = {}
        for index, value in enumerate(nums):
            temp = target - value
            if temp in nums_map:
                return [nums_map[temp], index]
            nums_map[value] = index
        return []


if __name__ == "__main__":
    nums = [2, 7, 11, 15]
    target = 9
    sol = Solution()
    print(sol.twoSum(nums, target))
